"""drop job configurations table

Revision ID: ed38666cb87d
Revises: f6e8ae66a187
Create Date: 2024-03-06 23:10:08.125060

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "ed38666cb87d"
down_revision = "f6e8ae66a187"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_job_configurations_version"), table_name="job_configurations"
    )
    op.drop_index(op.f("ix_job_configurations_tag"), table_name="job_configurations")
    op.drop_index(
        op.f("ix_job_configurations_provider_id"), table_name="job_configurations"
    )
    op.drop_index(op.f("ix_job_configurations_id"), table_name="job_configurations")
    op.drop_constraint(
        "studies_job_configuration_id_fkey", "studies", type_="foreignkey"
    )
    op.drop_constraint(
        "step_configurations_job_configuration_id_fkey",
        "step_configurations",
        type_="foreignkey",
    )
    op.drop_table("job_configurations")
    # ### end Alembic commands ###


def downgrade() -> None:
    op.create_table(
        "job_configurations",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("tag", sa.String(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("provider_id", sa.Integer(), nullable=False),
        sa.Column("version", sa.String(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["provider_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("provider_id", "tag", "version"),
    )
    op.create_index(
        op.f("ix_job_configurations_id"), "job_configurations", ["id"], unique=False
    )
    op.create_index(
        op.f("ix_job_configurations_provider_id"),
        "job_configurations",
        ["provider_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_job_configurations_tag"), "job_configurations", ["tag"], unique=False
    )
    op.create_index(
        op.f("ix_job_configurations_version"),
        "job_configurations",
        ["version"],
        unique=False,
    )
    # Assuming 'job configurations' and 'study configurations' tables have compatible schemas.
    # reinsert data
    insert_stmt = sa.sql.text(
        """
                INSERT INTO job_configurations (id, tag, name, provider_id, version)
                SELECT id, tag, name, provider_id, version FROM study_configurations
            """
    )
    op.execute(insert_stmt)
    # ### end Alembic commands ###
