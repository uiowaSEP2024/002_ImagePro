import { UseQueryResult, UseQueryOptions } from "@tanstack/react-query";
import { HttpError, MetaDataQuery } from "../../../interfaces";
export declare type UseLogProps<TData, TError> = {
    resource: string;
    action?: string;
    meta?: Record<number | string, any>;
    author?: Record<number | string, any>;
    queryOptions?: UseQueryOptions<TData, TError>;
    metaData?: MetaDataQuery;
};
/**
 * useLogList is used to get and filter audit logs.
 * @see {@link https://refine.dev/docs/core/hooks/audit-log/useLogList} for more details.
 */
export declare const useLogList: <TData = any, TError extends HttpError = HttpError>({ resource, action, meta, author, metaData, queryOptions, }: UseLogProps<TData, TError>) => UseQueryResult<TData, unknown>;
//# sourceMappingURL=index.d.ts.map