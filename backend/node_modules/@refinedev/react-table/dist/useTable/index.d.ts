import { BaseRecord, HttpError, useTableProps as useTablePropsCore, useTableReturnType as useTableReturnTypeCore } from "@refinedev/core";
import { TableOptions, Table } from "@tanstack/react-table";
export declare type UseTableReturnType<TData extends BaseRecord = BaseRecord, TError extends HttpError = HttpError> = Table<TData> & {
    refineCore: useTableReturnTypeCore<TData, TError>;
};
export declare type UseTableProps<TData extends BaseRecord = BaseRecord, TError extends HttpError = HttpError> = {
    /**
     * Configuration object for the core of the [useTable](/docs/api-reference/core/hooks/useTable/)
     * @type [`useTablePropsCore<TData, TError>`](/docs/api-reference/core/hooks/useTable/#properties)
     */
    refineCoreProps?: useTablePropsCore<TData, TError>;
} & Pick<TableOptions<TData>, "columns"> & Partial<Omit<TableOptions<TData>, "columns">>;
export declare function useTable<TData extends BaseRecord = BaseRecord, TError extends HttpError = HttpError>({ refineCoreProps: { hasPagination, ...refineCoreProps }, initialState: reactTableInitialState, ...rest }: UseTableProps<TData, TError>): UseTableReturnType<TData, TError>;
//# sourceMappingURL=index.d.ts.map