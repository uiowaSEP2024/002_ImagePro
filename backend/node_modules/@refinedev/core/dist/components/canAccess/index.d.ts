import React from "react";
import { BaseKey, IResourceItem, ITreeMenu } from "../../interfaces";
declare type CanAccessBaseProps = {
    /**
     * Resource name for API data interactions
     */
    resource?: string;
    /**
     * Intended action on resource
     */
    action: string;
    /**
     * Parameters associated with the resource
     * @type { resource?: [IResourceItem](https://refine.dev/docs/api-reference/core/interfaceReferences/#canparams), id?: [BaseKey](https://refine.dev/docs/api-reference/core/interfaceReferences/#basekey), [key: string]: any }
     */
    params?: {
        resource?: IResourceItem & {
            children?: ITreeMenu[];
        };
        id?: BaseKey;
        [key: string]: any;
    };
    /**
     * Content to show if access control returns `false`
     */
    fallback?: React.ReactNode;
    children: React.ReactNode;
};
declare type CanAccessWithoutParamsProps = {
    [key in Exclude<keyof CanAccessBaseProps, "fallback" | "children">]?: undefined;
} & {
    [key in "fallback" | "children"]?: CanAccessBaseProps[key];
};
export declare type CanAccessProps = CanAccessBaseProps | CanAccessWithoutParamsProps;
export declare const CanAccess: React.FC<CanAccessProps>;
export {};
//# sourceMappingURL=index.d.ts.map